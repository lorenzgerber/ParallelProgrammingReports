library(plot3D)
install.packages("plot3D")
library(plot3D)
example(surf3D)
example(persp3D)
setwd("~/git/ParallelProgrammingReports/topic_6/nbody")
read.csv('benchmark.txt', header=FALSE)
runtime<-read.csv('benchmark.txt', header=FALSE)
rbind(c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)),runtimes)
rbind(c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)),runtime)
cbind(c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)),runtime)
cbind("particles"=c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)),runtime)
cbind("particles"=c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)),"runtime"=runtime)
cbind("particles"=c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)),"runtimes"=runtime)
cbind("particles"=c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)),"runtimes" = runtime)
cbind("particles"=c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)), = runtime)
cbind("particles"=c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)), runtime)
runtimes<-cbind("particles"=c(rep(500,3), rep(750,3), rep(1000,3), rep(1250,3), rep(1500,3), rep(1750,3), rep(2000,3)), runtime)
runtimes<-colnames("particles", "runtime")
runtimes<-colname("particles", "runtime")
colnames(runtimes)<-c("particles","runtime")
runtimes
plot(runtimes)
library(forecast)
install(packages(forecast))
install.packages("forecast")
lm((particles ~ runtime, data=runtime))
?lm
lm(particles ~ runtime, data=runtime)
runtime
runtimes
lm(particles ~ runtime, data=runtimes)
lm(particles ~ runtime, data=runtimes)
predict(lm(particles ~ runtime, data=runtimes))
pred<-data.frame(runtime=seq(10,84400,1000))
predict(lm(particles ~ runtime, data=runtimes),newdata=pred)
test<-cbind(predict(lm(particles ~ runtime, data=runtimes),newdata=pred),seq(10,84400,1000))
plot(test)
predict(lm(particles ~ runtime, data=runtimes),newdata=86400)
?predict
predict(lm(particles ~ runtime, data=runtimes),newdata=pred)
predict(lm(particles ~ runtime, data=runtimes),newdata=86400)
predict(lm(particles ~ runtime, data=runtimes),newdata=pred)
plot(predict(lm(particles ~ runtime, data=runtimes),newdata=pred))
pred<-data.frame(runtime=seq(10,80,10))
plot(predict(lm(particles ~ runtime, data=runtimes),newdata=pred))
smooth.spline(particles ~ runtime, data=runtimes, spar=0.35)
?smooth.spline
smooth.spline(runtimes[,2],runtimes[,1], data=runtimes, spar=0.35)
smooth.spline(runtimes[,2],runtimes[,1], spar=0.35)
plot(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35))
plot(smooth.spline(runtimes[,1], runtimes[,2] spar=0.35))
plot(smooth.spline(runtimes[,1], runtimes[,2], spar=0.35))
smooth.spline(runtimes[,2],runtimes[,1], spar=0.35)
plot(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35))
predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35), newdata=pred)
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35), newdata=pred))
newdata
pred
pred<-data.frame(runtime=seq(400,86400,1000))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35), newdata=pred))
pred
predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35), newdata=pred)
smooth.spline(runtimes[,2],runtimes[,1], spar=0.35)
predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35), seq(400,86400,1000))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35), seq(400,86400,1000)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.35), seq(10,80,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.15), seq(10,80,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.8), seq(10,80,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.9), seq(10,80,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.99), seq(10,80,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.99), seq(10,200,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.99), seq(10,2000,1)))
?splinefun
splinefun(runtimes)
plot(splinefun(runtimes))
plot(runtimes)
plot(runtimes, ylim=c(0,90000), xlim=(500,10000))
plot(runtimes, ylim=c(0,90000), xlim=c(500,10000))
runtimes
pred<-data.frame(runtime=seq(10,84400,1000))
predict(lm(particles ~ runtime, data=runtimes),newdata=pred)
pred<-data.frame(runtime=seq(400,84400,1000))
predict(lm(particles ~ runtime, data=runtimes),newdata=pred)
seq(400,84400,1000)
plot(predict(lm(particles ~ runtime, data=runtimes),newdata=pred))
plot(lm(particles ~ runtime, data=runtimes))
plot(predict(lm(particles ~ runtime, data=runtimes))
)
plot(predict(lm(particles ~ runtime, data=runtimes),newdata=pred))
plot(runtimes)
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.99), seq(10,80,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.99), seq(10,70,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.99), seq(10,60,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.99), seq(10,70,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.2), seq(10,70,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.98), seq(10,70,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.999), seq(10,70,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.999), seq(10,1000,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.999), seq(10,10000,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.999), seq(10,70,1)))
plot(predict(smooth.spline(runtimes[,2],runtimes[,1], spar=0.999), seq(10,10000,1)))
plot(runtimes)
plot(runtimes[,1],runtime[,2])
plot(runtimes[,1],runtimes[,2])
plot(runtimes[,1]^2,runtimes[,2])
runtimes
runtimestrans<-cbind(runtimes[,1]^2, runtimes[,2])
runtimestrans
colnames(runtimestrans)<-c("particles","runtime")
plot(predict(lm(particles ~ runtime, data=runtimestrans),newdata=pred))
runtimestrans
as.data.frame(runtimestrans)
runtimestrans<-as.data.frame(runtimestrans)
plot(predict(lm(particles ~ runtime, data=runtimestrans),newdata=pred))
predict(lm(particles ~ runtime, data=runtimestrans),newdata=pred)
pred
predict(lm(particles ~ runtime, data=runtimestrans),newdata=pred)
sqrt(predict(lm(particles ~ runtime, data=runtimestrans),newdata=pred))
plot(lm(particles ~ runtime, data=runtimestrans))
